(window.webpackJsonp=window.webpackJsonp||[]).push([[8],{"8cUG":function(e,t,n){"use strict";n.r(t),n.d(t,"_frontmatter",(function(){return s})),n.d(t,"default",(function(){return l}));n("5hJT"),n("W1QL"),n("K/PF"),n("t91x"),n("75LO"),n("PJhk"),n("mXGw");var r=n("/FXl"),o=n("TjRS");n("aD51");function a(){return(a=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e}).apply(this,arguments)}var s={};void 0!==s&&s&&s===Object(s)&&Object.isExtensible(s)&&!s.hasOwnProperty("__filemeta")&&Object.defineProperty(s,"__filemeta",{configurable:!0,value:{name:"_frontmatter",filename:"src/guides/getting-started.mdx"}});var i={_frontmatter:s},c=o.a;function l(e){var t=e.components,n=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,["components"]);return Object(r.b)(c,a({},i,n,{components:t,mdxType:"MDXLayout"}),Object(r.b)("h1",{id:"getting-started"},"Getting started"),Object(r.b)("p",null,"All you need to know to start using ",Object(r.b)("inlineCode",{parentName:"p"},"Fielder"),"."),Object(r.b)("h2",{id:"creating-a-form"},"Creating a form"),Object(r.b)("p",null,"So you know you want to make a form but don't know where to start? Look no further!"),Object(r.b)("h3",{id:"install-fielder"},"Install fielder"),Object(r.b)("p",null,"Add fielder to your dependencies using you package manager of choice."),Object(r.b)("pre",null,Object(r.b)("code",a({parentName:"pre"},{className:"language-sh"}),"npm i fielder\n")),Object(r.b)("h3",{id:"create-your-form-component"},"Create your form component"),Object(r.b)("p",null,"Every form starts in the same way, you want to make your form component which is going to:"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},"Create an instance of ",Object(r.b)("inlineCode",{parentName:"li"},"Fielder")),Object(r.b)("li",{parentName:"ul"},"Expose that instance to any children")),Object(r.b)("pre",null,Object(r.b)("code",a({parentName:"pre"},{className:"language-tsx"}),"import React, { useEffect } from 'react';\nimport { useForm, FielderProvider } from 'fielder';\n\nconst LoginForm = ({ children }) => {\n  const formState = useForm();\n\n  // Example of reacting to form changes\n  useEffect(() => {\n    console.log('Form state has changed!', formState);\n  }, [formState]);\n\n  return <FielderProvider value={formState}>{children}</FielderProvider>;\n};\n")),Object(r.b)("p",null,"The use of ",Object(r.b)("inlineCode",{parentName:"p"},"FielderProvider")," ensures that ",Object(r.b)("inlineCode",{parentName:"p"},"useField")," can later access the form state."),Object(r.b)("blockquote",null,Object(r.b)("p",{parentName:"blockquote"},"Forms can be a small section on a page, or can span across multiple pages (i.e. steppers/wizards/multi-step).")),Object(r.b)("h2",{id:"adding-some-fields"},"Adding some fields"),Object(r.b)("p",null,"Next we want to add some fields to our form."),Object(r.b)("blockquote",null,Object(r.b)("p",{parentName:"blockquote"},"It's important to remember that fielder treats fields as dynamic entities. This means they can be added, removed, and/or changed at any time.")),Object(r.b)("pre",null,Object(r.b)("code",a({parentName:"pre"},{className:"language-tsx"}),"const MyFormContent = () => {\n  const [usernameProps] = useField({\n    name: 'username'\n  });\n  const [passwordProps] = useField({\n    name: 'password'\n  });\n\n  return (\n    <form>\n      <input type=\"text\" {...usernameProps} />\n      <input type=\"text\" {...passwordProps} />\n    </form>\n  );\n};\n")),Object(r.b)("h2",{id:"checkbox-and-radio-inputs"},"Checkbox and Radio inputs"),Object(r.b)("p",null,"Checkbox and radio inputs are different to all other field types as their state is declared by the ",Object(r.b)("inlineCode",{parentName:"p"},"checked"),"\nattribute rather than ",Object(r.b)("inlineCode",{parentName:"p"},"value")," (",Object(r.b)("a",a({parentName:"p"},{href:"https://github.com/andyrichardson/fielder/issues/23#issuecomment-576352847"}),"more info here"),")."),Object(r.b)("pre",null,Object(r.b)("code",a({parentName:"pre"},{className:"language-tsx"}),'const [hobbiesProps] = useField({\n  name: \'hobbies\'\n});\nconst [termsProps] = useField({\n  name: \'terms\'\n});\n\nreturn (\n  <>\n    <fieldset>\n      <p>What are your hobbies</p>\n      <input type="checkbox" {...hobbiesProps} value="sports" /> Sports\n      <input type="checkbox" {...hobbiesProps} value="coding" /> Coding\n      <input type="checkbox" {...hobbiesProps} value="other" /> Other\n    </fieldset>\n    <fieldset>\n      <p>Do you accept the terms & conditions</p>\n      <input type="radio" {...termsProps} value="yes" /> Yes\n      <input type="radio" {...termsProps} value="no" /> No\n    </fieldset>\n  </>\n);\n')),Object(r.b)("h3",{id:"things-to-note"},"Things to note"),Object(r.b)("p",null,"Use the ",Object(r.b)("inlineCode",{parentName:"p"},"input")," element, or a component which forwards the ",Object(r.b)("inlineCode",{parentName:"p"},"ref")," prop"),Object(r.b)("pre",null,Object(r.b)("code",a({parentName:"pre"},{className:"language-tsx"}),'// This will prevent the checked state from being in sync\n<input type="radio" {...radioProps} value="accept" ref={someOtherRef} />\n')),Object(r.b)("blockquote",null,Object(r.b)("p",{parentName:"blockquote"},"Because of how checkboxes differ to other elements, ",Object(r.b)("inlineCode",{parentName:"p"},"ref")," access to checkbox and radio elements is required")),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Do not")," manually set the checked prop - this is handled by Fielder."),Object(r.b)("pre",null,Object(r.b)("code",a({parentName:"pre"},{className:"language-tsx"}),'// This is unnecessary and will cause conflicts\n<input type="radio" {...radioProps} value="accept" checked={someCondition} />\n')))}l&&l===Object(l)&&Object.isExtensible(l)&&!l.hasOwnProperty("__filemeta")&&Object.defineProperty(l,"__filemeta",{configurable:!0,value:{name:"MDXContent",filename:"src/guides/getting-started.mdx"}}),l.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-guides-getting-started-mdx-49014447a7992fa1a3b9.js.map