(window.webpackJsonp=window.webpackJsonp||[]).push([[3],{"1ZsU":function(e,t,n){"use strict";n.r(t),n.d(t,"_frontmatter",(function(){return i})),n.d(t,"default",(function(){return p}));n("5hJT"),n("W1QL"),n("K/PF"),n("t91x"),n("75LO"),n("PJhk"),n("mXGw");var a=n("/FXl"),l=n("TjRS");n("aD51");function b(){return(b=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var a in n)Object.prototype.hasOwnProperty.call(n,a)&&(e[a]=n[a])}return e}).apply(this,arguments)}var i={};void 0!==i&&i&&i===Object(i)&&Object.isExtensible(i)&&!i.hasOwnProperty("__filemeta")&&Object.defineProperty(i,"__filemeta",{configurable:!0,value:{name:"_frontmatter",filename:"src/api/useField.mdx"}});var r={_frontmatter:i},o=l.a;function p(e){var t=e.components,n=function(e,t){if(null==e)return{};var n,a,l={},b=Object.keys(e);for(a=0;a<b.length;a++)n=b[a],t.indexOf(n)>=0||(l[n]=e[n]);return l}(e,["components"]);return Object(a.b)(o,b({},r,n,{components:t,mdxType:"MDXLayout"}),Object(a.b)("h1",{id:"usefield"},"useField"),Object(a.b)("p",null,Object(a.b)("em",{parentName:"p"},"Hook to mount a field to the form.")),Object(a.b)("pre",null,Object(a.b)("code",b({parentName:"pre"},{className:"language-tsx"}),"import { useField } from 'fielder';\n")),Object(a.b)("h2",{id:"example-usage"},"Example usage"),Object(a.b)("pre",null,Object(a.b)("code",b({parentName:"pre"},{className:"language-tsx"}),"const [passwordProps, passwordMeta] = useField({\n  name: 'password',\n  validate: passwordValidation\n});\n\nreturn <input type={'password'} {...passwordProps} />;\n")),Object(a.b)("h2",{id:"return-type"},"Return type"),Object(a.b)("p",null,Object(a.b)("em",{parentName:"p"},"An array containing props for the target component ",Object(a.b)("a",b({parentName:"em"},{href:"#usefieldprops"}),"(UseFieldProps)")," and metadata ",Object(a.b)("a",b({parentName:"em"},{href:"#usefieldmeta"}),"(UseFieldMeta)"),".")),Object(a.b)("p",null,"Type: ",Object(a.b)("inlineCode",{parentName:"p"},"[UseFieldProps, UseFieldMeta]")),Object(a.b)("h2",{id:"arguments"},"Arguments"),Object(a.b)("p",null,Object(a.b)("em",{parentName:"p"},"useField")," takes a single object with the following properties:"),Object(a.b)("h3",{id:"name-required"},"name ",Object(a.b)("strong",{parentName:"h3"},"(required)")),Object(a.b)("p",null,Object(a.b)("em",{parentName:"p"},"The name/key of the field to be added to the form state.")),Object(a.b)("p",null,"Type: ",Object(a.b)("inlineCode",{parentName:"p"},"string")),Object(a.b)("p",null,"Example: ",Object(a.b)("inlineCode",{parentName:"p"},"password")),Object(a.b)("h3",{id:"validate"},"validate"),Object(a.b)("p",null,Object(a.b)("em",{parentName:"p"},"A validation function which throws an error when validation has failed.")),Object(a.b)("p",null,"Type: ",Object(a.b)("inlineCode",{parentName:"p"},"(value: string, formState: FormState) => (void | Promise<void>)")),Object(a.b)("p",null,"Default: ",Object(a.b)("inlineCode",{parentName:"p"},"undefined")),Object(a.b)("p",null,"Example:"),Object(a.b)("pre",null,Object(a.b)("code",b({parentName:"pre"},{className:"language-js"}),"(v, f) => {\n  if (v < f.otherField.value) {\n    throw Error(\"Value must be more than 'from' value\")\n  }\n}`\n")),Object(a.b)("h3",{id:"initialvalid"},"initialValid"),Object(a.b)("p",null,Object(a.b)("em",{parentName:"p"},"Whether the initial value should be considered valid.")),Object(a.b)("p",null,"Type: ",Object(a.b)("inlineCode",{parentName:"p"},"boolean")),Object(a.b)("p",null,"Default: ",Object(a.b)("inlineCode",{parentName:"p"},"false")," (see comment below)"),Object(a.b)("blockquote",null,Object(a.b)("p",{parentName:"blockquote"},"When no ",Object(a.b)("inlineCode",{parentName:"p"},"validate")," argument is passed to ",Object(a.b)("inlineCode",{parentName:"p"},"useField"),", the default value is ",Object(a.b)("inlineCode",{parentName:"p"},"true"))),Object(a.b)("h3",{id:"initialerror"},"initialError"),Object(a.b)("p",null,Object(a.b)("em",{parentName:"p"},"The initial error of the field.")),Object(a.b)("p",null,"Type: ",Object(a.b)("inlineCode",{parentName:"p"},"string | Error")),Object(a.b)("p",null,"Default: ",Object(a.b)("inlineCode",{parentName:"p"},"undefined")),Object(a.b)("h3",{id:"initialvalue"},"initialValue"),Object(a.b)("p",null,Object(a.b)("em",{parentName:"p"},"The value of the field on first mount (first mount after being destroyed).")),Object(a.b)("p",null,"Type: ",Object(a.b)("inlineCode",{parentName:"p"},"string | boolean")),Object(a.b)("p",null,"Default: ",Object(a.b)("inlineCode",{parentName:"p"},'""')),Object(a.b)("h3",{id:"initialtouched-deprecated"},"initialTouched ",Object(a.b)("strong",{parentName:"h3"},"(deprecated)")),Object(a.b)("p",null,Object(a.b)("em",{parentName:"p"},"Whether the initial state of the field is 'touched'.")),Object(a.b)("p",null,"Type: ",Object(a.b)("inlineCode",{parentName:"p"},"boolean")),Object(a.b)("p",null,"Default: ",Object(a.b)("inlineCode",{parentName:"p"},"false")),Object(a.b)("h3",{id:"validateonblur"},"validateOnBlur"),Object(a.b)("p",null,Object(a.b)("em",{parentName:"p"},"Whether the provided validate function should be called on blur.")),Object(a.b)("p",null,"Type: ",Object(a.b)("inlineCode",{parentName:"p"},"boolean")),Object(a.b)("p",null,"Default: ",Object(a.b)("inlineCode",{parentName:"p"},"true")),Object(a.b)("h3",{id:"validateonchange"},"validateOnChange"),Object(a.b)("p",null,Object(a.b)("em",{parentName:"p"},"Whether the provided validate function should be called on change.")),Object(a.b)("p",null,"Type: ",Object(a.b)("inlineCode",{parentName:"p"},"boolean")),Object(a.b)("p",null,"Default: ",Object(a.b)("inlineCode",{parentName:"p"},"true")),Object(a.b)("h3",{id:"validateonupdate"},"validateOnUpdate"),Object(a.b)("p",null,Object(a.b)("em",{parentName:"p"},"Whether the provided validate function should be called on ",Object(a.b)("strong",{parentName:"em"},"any")," form change.")),Object(a.b)("p",null,"Type: ",Object(a.b)("inlineCode",{parentName:"p"},"boolean")),Object(a.b)("p",null,"Default: ",Object(a.b)("inlineCode",{parentName:"p"},"false")),Object(a.b)("h3",{id:"destroyonunmount"},"destroyOnUnmount"),Object(a.b)("p",null,Object(a.b)("em",{parentName:"p"},"Whether the field should be completely removed from the form state on unmount.")),Object(a.b)("p",null,"Type: ",Object(a.b)("inlineCode",{parentName:"p"},"boolean")),Object(a.b)("p",null,"Default: ",Object(a.b)("inlineCode",{parentName:"p"},"false")),Object(a.b)("h2",{id:"types"},"Types"),Object(a.b)("h3",{id:"usefieldprops"},"UseFieldProps"),Object(a.b)("p",null,"Props which can be passed to a form element / component."),Object(a.b)("pre",null,Object(a.b)("code",b({parentName:"pre"},{className:"language-ts"}),"type UseFieldProps<T = any> = {\n  readonly name: string;\n  readonly value: T;\n  readonly onChange: ChangeEventHandler;\n  readonly onBlur: () => void;\n};\n")),Object(a.b)("h3",{id:"usefieldmeta"},"UseFieldMeta"),Object(a.b)("p",null,"Additional information about a field and it's validation state."),Object(a.b)("pre",null,Object(a.b)("code",b({parentName:"pre"},{className:"language-ts"}),"type UseFieldMeta = {\n  /** Validation error. */\n  readonly error?: Error | string;\n  /** Valid state. */\n  readonly isValid: boolean;\n  /** Async validation is in progress. */\n  readonly isValidating: boolean;\n  /** onBlur has been called since mount/remount. */\n  readonly hasBlurred: boolean;\n  /** onChange has been called since mount/remount. */\n  readonly hasChanged: boolean;\n};\n")))}p&&p===Object(p)&&Object.isExtensible(p)&&!p.hasOwnProperty("__filemeta")&&Object.defineProperty(p,"__filemeta",{configurable:!0,value:{name:"MDXContent",filename:"src/api/useField.mdx"}}),p.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-api-use-field-mdx-603fe75f90b91e7fb581.js.map