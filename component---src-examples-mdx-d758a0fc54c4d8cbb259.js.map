{"version":3,"sources":["webpack:///../src/examples.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","src","style","title","allow","sandbox","isMDXComponent"],"mappings":"kfAMO,IAAMA,EAAe,Q,kMAE5B,IAKMC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,E,oIACF,mBACD,OAAO,YAACJ,EAAD,KAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAG5E,iBAAQ,CACN,GAAM,YADR,YAGA,mHACA,iBAAQ,CACN,GAAM,sBADR,sBAGA,4GACA,sBAAQC,IAAI,mKAAmKC,MAAO,CACpL,MAAS,OACT,OAAU,QACV,OAAU,IACV,aAAgB,MAChB,SAAY,UACXC,MAAM,SAASC,MAAM,2HAA2HC,QAAQ,0EAC3J,iBAAQ,CACN,GAAM,cADR,cAGA,8GACA,oDACA,sBAAQJ,IAAI,gLAAgLC,MAAO,CACjM,MAAS,OACT,OAAU,QACV,OAAU,IACV,aAAgB,MAChB,SAAY,UACXC,MAAM,aAAaC,MAAM,2HAA2HC,QAAQ,0EAC/J,iBAAQ,CACN,GAAM,mBADR,mBAGA,+HACA,kFACA,sBAAQJ,IAAI,+KAA+KC,MAAO,CAChM,MAAS,OACT,OAAU,QACV,OAAU,IACV,aAAgB,MAChB,SAAY,UACXC,MAAM,aAAaC,MAAM,2HAA2HC,QAAQ,2E,yLAKnKR,EAAWS,gBAAiB","file":"component---src-examples-mdx-d758a0fc54c4d8cbb259.js","sourcesContent":["import React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/andyrichardson/development/form/docs/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"examples\"\n    }}>{`Examples`}</h1>\n    <p>{`Check out the examples below and feel free to play around with the code and change values.`}</p>\n    <h2 {...{\n      \"id\": \"basic-introduction\"\n    }}>{`Basic Introduction`}</h2>\n    <p>{`Here's a basic login form, try enter some fake values and see how validation works!`}</p>\n    <iframe src=\"https://codesandbox.io/embed/github/andyrichardson/fielder/tree/master/examples/1-basics?fontsize=14&hidenavigation=1&theme=dark&module=%2Fsrc%2Fform%2FForm.tsx\" style={{\n      \"width\": \"100%\",\n      \"height\": \"500px\",\n      \"border\": \"0\",\n      \"borderRadius\": \"4px\",\n      \"overflow\": \"hidden\"\n    }} title=\"basics\" allow=\"geolocation; microphone; camera; midi; vr; accelerometer; gyroscope; payment; ambient-light-sensor; encrypted-media; usb\" sandbox=\"allow-modals allow-forms allow-popups allow-scripts allow-same-origin\"></iframe>\n    <h2 {...{\n      \"id\": \"cross-form\"\n    }}>{`Cross form`}</h2>\n    <p>{`Managing state across multiple components can be tricky but we think we've solved it!`}</p>\n    <p>{`Check out the example below`}</p>\n    <iframe src=\"https://codesandbox.io/embed/github/andyrichardson/fielder/tree/master/examples/2-multi-step?fontsize=14&hidenavigation=1&theme=dark&module=%2Fsrc%2Fregister-form%2FForm.tsx\" style={{\n      \"width\": \"100%\",\n      \"height\": \"500px\",\n      \"border\": \"0\",\n      \"borderRadius\": \"4px\",\n      \"overflow\": \"hidden\"\n    }} title=\"vanilla-ts\" allow=\"geolocation; microphone; camera; midi; vr; accelerometer; gyroscope; payment; ambient-light-sensor; encrypted-media; usb\" sandbox=\"allow-modals allow-forms allow-popups allow-scripts allow-same-origin\"></iframe>\n    <h2 {...{\n      \"id\": \"branching-logic\"\n    }}>{`Branching logic`}</h2>\n    <p>{`Sometimes the direction of your form (and end submission), is conditional on the info the user enters.`}</p>\n    <p>{`Here's an example of a form which branches across routes.`}</p>\n    <iframe src=\"https://codesandbox.io/embed/github/andyrichardson/fielder/tree/master/examples/3-branching?fontsize=14&hidenavigation=1&theme=dark&module=%2Fsrc%2Fregister-form%2FForm.tsx\" style={{\n      \"width\": \"100%\",\n      \"height\": \"500px\",\n      \"border\": \"0\",\n      \"borderRadius\": \"4px\",\n      \"overflow\": \"hidden\"\n    }} title=\"vanilla-ts\" allow=\"geolocation; microphone; camera; midi; vr; accelerometer; gyroscope; payment; ambient-light-sensor; encrypted-media; usb\" sandbox=\"allow-modals allow-forms allow-popups allow-scripts allow-same-origin\"></iframe>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}