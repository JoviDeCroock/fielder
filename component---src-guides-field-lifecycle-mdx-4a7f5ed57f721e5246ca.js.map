{"version":3,"sources":["webpack:///../src/guides/field-lifecycle.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"mappings":"kfAMO,IAAMA,EAAe,Q,gNAE5B,IAKMC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,E,oIACF,mBACD,OAAO,YAACJ,EAAD,KAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAG5E,iBAAQ,CACN,GAAM,mBADR,mBAGA,gJAC2C,kBAAIC,WAAW,KAAf,4BAD3C,8BAGA,iBAAQ,CACN,GAAM,WADR,YAGA,sGACA,8BACE,iBAAGA,WAAW,cAAd,+EAA2G,kBAAIA,WAAW,KAAf,SAA3G,QAAqJ,kBAAIA,WAAW,KAAf,cAArJ,aAEF,iBAAQ,CACN,GAAM,YADR,aAGA,yFACA,+CACA,sBACE,kBAAIA,WAAW,MAAf,oBAAyC,kBAAIA,WAAW,MAAf,eACzC,kBAAIA,WAAW,MAAf,oBAAyC,kBAAIA,WAAW,MAAf,aACzC,kBAAIA,WAAW,MAAf,gCAAqD,kBAAIA,WAAW,MAAf,gDAEvD,iBAAQ,CACN,GAAM,aADR,cAGA,sGACA,oFACA,8BACE,iBAAGA,WAAW,cAAd,wHAEF,iBAAQ,CACN,GAAM,sBADR,yBAGA,0IAEA,qI,uMAMJJ,EAAWK,gBAAiB","file":"component---src-guides-field-lifecycle-mdx-4a7f5ed57f721e5246ca.js","sourcesContent":["import React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/andyrichardson/development/form/docs/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"field-lifecycle\"\n    }}>{`Field lifecycle`}</h1>\n    <p>{`Fields have a few key events you'll want to know about. Understanding the\nlifecylce of a field will help with choosing `}<em parentName=\"p\">{`when to apply validation`}</em>{` and also\nwith debugging.`}</p>\n    <h2 {...{\n      \"id\": \"1-mount\"\n    }}>{`1. Mount`}</h2>\n    <p>{`The field is mounted for the first time and is initialized in the form state.`}</p>\n    <blockquote>\n      <p parentName=\"blockquote\">{`Note: This can cause a number of changes to the form-wide state such as the `}<em parentName=\"p\">{`valid`}</em>{` and `}<em parentName=\"p\">{`validating`}</em>{` states.`}</p>\n    </blockquote>\n    <h2 {...{\n      \"id\": \"2-change\"\n    }}>{`2. Change`}</h2>\n    <p>{`The field has changed in some way and the form state is updated.`}</p>\n    <p>{`Change events include:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`value is changed `}<em parentName=\"li\">{`(onChange)`}</em></li>\n      <li parentName=\"ul\">{`field is blurred `}<em parentName=\"li\">{`(onBlur)`}</em></li>\n      <li parentName=\"ul\">{`field validation has changed `}<em parentName=\"li\">{`(new \"validate\" option passed to useField)`}</em></li>\n    </ul>\n    <h2 {...{\n      \"id\": \"3-unmount\"\n    }}>{`3. Unmount`}</h2>\n    <p>{`The field is no longer mounted and is set as inactive in the form-wide state.`}</p>\n    <p>{`Optionally, the field can be be purged from the form state.`}</p>\n    <blockquote>\n      <p parentName=\"blockquote\">{`Note: Inactive fields are not validated, however, other fields can still see their values and validate accordingly.`}</p>\n    </blockquote>\n    <h2 {...{\n      \"id\": \"4-remount-optional\"\n    }}>{`4. Remount (optional)`}</h2>\n    <p>{`Fields which have not been purged can be re-mounted. In this case, their\nvalue prior to unmounting will be used.`}</p>\n    <p>{`Remounting is the default functionality of a field and is often useful\nwhen working with multi-page forms.`}</p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}