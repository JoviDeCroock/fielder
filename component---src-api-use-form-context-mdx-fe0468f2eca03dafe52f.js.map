{"version":3,"sources":["webpack:///../src/api/useFormContext.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"mappings":"kfAMO,IAAMA,EAAe,Q,4MAE5B,IAKMC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,E,oIACF,mBACD,OAAO,YAACJ,EAAD,KAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAG5E,iBAAQ,CACN,GAAM,kBADR,kBAGA,qBAAG,kBAAIC,WAAW,KAAf,8CACH,uBAAK,sBAAMA,WAAW,OAAU,CAC5B,UAAa,iBADZ,gDAIL,iBAAQ,CACN,GAAM,iBADR,iBAGA,uBAAK,sBAAMA,WAAW,OAAU,CAC5B,UAAa,iBADZ,2GAML,iBAAQ,CACN,GAAM,YADR,YAGA,qBAAG,kBAAIA,WAAW,KAAf,yBAA6C,mBAAGA,WAAW,MAAS,CACjE,KAAQ,2BADkC,eAA7C,wCAGH,8BAAa,0BAAYA,WAAW,KAAvB,cACb,8BACE,iBAAGA,WAAW,cAAd,OAAmC,mBAAGA,WAAW,KAAQ,CACrD,KAAQ,iBADuB,yBAAnC,+BAEkE,kBAAIA,WAAW,KAAf,eAEpE,iBAAQ,CACN,GAAM,aADR,aAGA,qBAAG,0BAAYA,WAAW,KAAvB,WAAH,2C,mMAKJJ,EAAWK,gBAAiB","file":"component---src-api-use-form-context-mdx-fe0468f2eca03dafe52f.js","sourcesContent":["import React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/andyrichardson/development/form/docs/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"useformcontext\"\n    }}>{`useFormContext`}</h1>\n    <p><em parentName=\"p\">{`Retrieves form state exposed via context.`}</em></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-tsx\"\n      }}>{`import { useFormContext } from 'fielder';\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"example-usage\"\n    }}>{`Example Usage`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-tsx\"\n      }}>{`const formState = useFormContext();\n\nreturn <button disabled={!formState.isValid}>Submit</button>;\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"response\"\n    }}>{`Response`}</h2>\n    <p><em parentName=\"p\">{`The state of the form `}<a parentName=\"em\" {...{\n          \"href\": \"/api/useform#formstate\"\n        }}>{`(FormState)`}</a>{` along with accessors and mutators.`}</em></p>\n    <p>{`Type; `}<inlineCode parentName=\"p\">{`FormState`}</inlineCode></p>\n    <blockquote>\n      <p parentName=\"blockquote\">{`See `}<a parentName=\"p\" {...{\n          \"href\": \"/api/useform\"\n        }}>{`useForm documentation`}</a>{` for more information about `}<em parentName=\"p\">{`FormState`}</em></p>\n    </blockquote>\n    <h2 {...{\n      \"id\": \"arguments\"\n    }}>{`Arguments`}</h2>\n    <p><inlineCode parentName=\"p\">{`useForm`}</inlineCode>{` doesn't currently take any arguments.`}</p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}