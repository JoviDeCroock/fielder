jobs:
  install:
    docker:
      - image: node:13
    steps:
      - checkout
      - restore_cache:
          keys:
            - node-cache-{{ checksum "package-lock.json" }}
      - run: npm ci
      - save_cache:
          key: node-cache-{{ checksum "package-lock.json" }}
          paths:
            - 'node_modules'

  build:
    docker:
      - image: node:13
    steps:
      - checkout
      - restore_cache:
          keys:
            - node-cache-{{ checksum "package-lock.json" }}
      - run: npm run build
      - save_cache:
          key: build-cache-{{ .Revision }}
          paths:
            - 'dist'
      - run: npm pack
      - run: mv fielder*.tgz fielder.tgz
      - save_cache:
          key: package-cache-{{ .Revision }}
          paths:
            - 'fielder.tgz'
      - store_artifacts:
          path: fielder.tgz

  build docs:
    docker:
      - image: node:13
    steps:
      - checkout
      - restore_cache:
          keys:
            - docs-module-cache-{{ checksum "docs/yarn.lock" }}
      - run:
          command: yarn
          working_directory: docs
      - save_cache:
          key: docs-module-cache-{{ checksum "docs/yarn.lock" }}
          paths:
            - 'docs/node_modules'
      - run:
          command: yarn run build
          working_directory: docs
      - store_artifacts:
          path: docs/.docz/dist
          destination: static-docs

  test:
    docker:
      - image: node:13
    steps:
      - checkout
      - restore_cache:
          keys:
            - node-cache-{{ checksum "package-lock.json" }}
      - run: npm run test -- --coverage
      - run: npx codecov

  e2e:
    docker:
      - image: cypress/browsers:chrome67
    steps:
      - checkout
      - restore_cache:
          keys:
            - package-cache-{{ .Revision }}
      - run:
          command: npm remove fielder
          working_directory: examples/1-basics
      - run:
          command: npm install
          working_directory: examples/1-basics
      - run:
          command: npm install ../../fielder.tgz
          working_directory: examples/1-basics
      - run:
          command: npm run serve & sleep 10 && npm run test
          working_directory: examples/1-basics

  prettier:
    docker:
      - image: node:13
    steps:
      - checkout
      - restore_cache:
          keys:
            - node-cache-{{ checksum "package-lock.json" }}
      - run: npm run check-formatting

  lint:
    docker:
      - image: node:13
    steps:
      - checkout
      - restore_cache:
          keys:
            - node-cache-{{ checksum "package-lock.json" }}
      - run: npm run lint

  deploy:
    docker:
      - image: node:13
    steps:
      - checkout
      - restore_cache:
          keys:
            - build-cache-{{ .Revision }}
      - run:
          command: |
            node -e "process.env.CIRCLE_TAG === \`v\${require('./package.json').version}\` ? process.exit(0) : (console.error('Tag version does not line up with version in package.json') || process.exit(1))"
            npm config set "//registry.npmjs.org/:_authToken" "$npm_TOKEN"
            npm publish --access=public
workflows:
  version: 2
  build_and_test:
    jobs:
      - install:
          filters:
            tags:
              only: /.*/
      - test:
          requires:
            - install
          filters:
            tags:
              only: /.*/
      - build:
          requires:
            - install
          filters:
            tags:
              only: /.*/
      - e2e:
          requires:
            - install
            - build
          filters:
            tags:
              only: /.*/
      - prettier:
          requires:
            - install
          filters:
            tags:
              only: /.*/
      - lint:
          requires:
            - install
          filters:
            tags:
              only: /.*/
      - build docs:
          requires:
            - install
          filters:
            tags:
              only: /.*/
      - deploy:
          context: NPM
          requires:
            - install
            - test
            - build
            - prettier
            - lint
          filters:
            tags:
              only: /.*/
            branches:
              ignore: /.*/
