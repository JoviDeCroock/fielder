{"id":"index.ts","dependencies":[{"name":"/Users/andyrichardson/development/form/tsconfig.json","includedInParent":true,"mtime":1574853299213},{"name":"/Users/andyrichardson/development/form/example/package.json","includedInParent":true,"mtime":1574855270728},{"name":"fielder","loc":{"line":1,"column":19},"parent":"/Users/andyrichardson/development/form/example/src/index.ts","resolved":"/Users/andyrichardson/development/form/example/node_modules/fielder/dist/index.es.js"}],"generated":{"js":"\"use strict\";\n\nvar f = _interopRequireWildcard(require(\"fielder\"));\n\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nconsole.log(f);\nconsole.log(\"hello\");"},"sourceMaps":{"js":{"mappings":[{"source":"index.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":3,"column":0}},{"source":"index.ts","name":null,"original":{"line":3,"column":0},"generated":{"line":9,"column":0}},{"source":"index.ts","name":null,"original":{"line":3,"column":7},"generated":{"line":9,"column":7}},{"source":"index.ts","name":null,"original":{"line":3,"column":8},"generated":{"line":9,"column":8}},{"source":"index.ts","name":null,"original":{"line":3,"column":0},"generated":{"line":9,"column":11}},{"source":"index.ts","name":null,"original":{"line":3,"column":12},"generated":{"line":9,"column":12}},{"source":"index.ts","name":null,"original":{"line":3,"column":0},"generated":{"line":9,"column":13}},{"source":"index.ts","name":null,"original":{"line":4,"column":0},"generated":{"line":10,"column":0}},{"source":"index.ts","name":null,"original":{"line":4,"column":7},"generated":{"line":10,"column":7}},{"source":"index.ts","name":null,"original":{"line":4,"column":8},"generated":{"line":10,"column":8}},{"source":"index.ts","name":null,"original":{"line":4,"column":0},"generated":{"line":10,"column":11}},{"source":"index.ts","name":null,"original":{"line":4,"column":12},"generated":{"line":10,"column":12}},{"source":"index.ts","name":null,"original":{"line":4,"column":0},"generated":{"line":10,"column":19}}],"sources":{"index.ts":"import * as f from \"fielder\";\n\nconsole.log(f);\nconsole.log(\"hello\");\n"},"lineCount":null}},"error":null,"hash":"349e8755bb321ddd1fb00944983662fc","cacheData":{"env":{}}}